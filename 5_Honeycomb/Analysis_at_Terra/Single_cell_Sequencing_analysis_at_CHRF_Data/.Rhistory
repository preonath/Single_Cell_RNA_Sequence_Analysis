library(Seurat)
counts <- read.table("/media/asus/275dd380-2319-4638-bcdd-5f65b2b1d4b5/CHRF_Project_Data/Single_Cell/Single_Cell_NP_NextSeq_Batch_24_R/SC_NP_H_7061/4_Quant/SC_NP_H_7061_featurecounts.txt", header = TRUE, row.names = 1)
seuratObject <- CreateSeuratObject(counts = counts)
seuratObject <- subset(seuratObject, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
seuratObject <- NormalizeData(seuratObject, normalization.method = "LogNormalize", scale.factor = 10000)
seuratObject <- FindVariableFeatures(seuratObject, selection.method = "vst", nfeatures = 2000)
counts <- read.table("/media/asus/275dd380-2319-4638-bcdd-5f65b2b1d4b5/CHRF_Project_Data/Single_Cell/Single_Cell_NP_NextSeq_Batch_24_R/SC_NP_H_7061/4_Quant/SC_NP_H_7061_featurecounts.txt", header = TRUE, row.names = 1)
seuratObject <- CreateSeuratObject(counts = counts)
seuratObject <- subset(seuratObject, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
seuratObject <- CreateSeuratObject(counts = counts)
seuratObject <- subset(seuratObject, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
seuratObject <- NormalizeData(seuratObject, normalization.method = "LogNormalize", scale.factor = 10000)
seuratObject <- FindVariableFeatures(seuratObject, selection.method = "vst", nfeatures = 2000)
seuratObject <- CreateSeuratObject(counts = counts)
# Example calculation, adjust based on your mitochondrial gene names
mito.genes <- grep("^MT-", rownames(seuratObject), value = TRUE)
seuratObject[["percent.mt"]] <- PercentageFeatureSet(seuratObject, features = mito.genes)
seuratObject <- subset(seuratObject, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
seuratObject <- NormalizeData(seuratObject, normalization.method = "LogNormalize", scale.factor = 10000)
seuratObject <- FindVariableFeatures(seuratObject, selection.method = "vst", nfeatures = 2000)
View(seuratObject)
View(counts)
# Example calculation, adjust based on your mitochondrial gene names
mito.genes <- grep("^MT-", rownames(seuratObject), value = TRUE)
seuratObject <- CreateSeuratObject(counts = counts)
seuratObject <- subset(seuratObject, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
View(seuratObject)
seuratObject <- NormalizeData(seuratObject, normalization.method = "LogNormalize", scale.factor = 10000)
seuratObject <- FindVariableFeatures(seuratObject, selection.method = "vst", nfeatures = 2000)
seuratObject <- NormalizeData(seuratObject, normalization.method = "LogNormalize", scale.factor = 10000)
# seuratObject <- FindVariableFeatures(seuratObject, selection.method = "vst", nfeatures = 2000)
seuratObject <- ScaleData(seuratObject, vars.to.regress = "percent.mt")
seuratObject <- subset(seuratObject, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 )
seuratObject <- NormalizeData(seuratObject, normalization.method = "LogNormalize", scale.factor = 10000)
# seuratObject <- FindVariableFeatures(seuratObject, selection.method = "vst", nfeatures = 2000)
seuratObject <- ScaleData(seuratObject, vars.to.regress = "percent.mt")
seuratObject <- subset(seuratObject, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 )
seuratObject <- NormalizeData(seuratObject, normalization.method = "LogNormalize", scale.factor = 10000)
# seuratObject <- FindVariableFeatures(seuratObject, selection.method = "vst", nfeatures = 2000)
# seuratObject <- ScaleData(seuratObject, vars.to.regress = "percent.mt")
seuratObject <- RunPCA(seuratObject, features = VariableFeatures(object = seuratObject))
library(Seurat)
library(Seurat)
counts <- read.table("/media/asus/275dd380-2319-4638-bcdd-5f65b2b1d4b5/CHRF_Project_Data/Single_Cell/Single_Cell_NP_NextSeq_Batch_24_R/SC_NP_H_7061/4_Quant/SC_NP_H_7061_featurecounts.txt", header = TRUE, row.names = 1)
seuratObject <- CreateSeuratObject(counts = counts)
seuratObject <- subset(seuratObject, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 )
seuratObject <- NormalizeData(seuratObject, normalization.method = "LogNormalize", scale.factor = 10000)
# seuratObject <- FindVariableFeatures(seuratObject, selection.method = "vst", nfeatures = 2000)
# seuratObject <- ScaleData(seuratObject, vars.to.regress = "percent.mt")
seuratObject <- RunPCA(seuratObject, features = VariableFeatures(object = seuratObject))
seuratObject <- FindNeighbors(seuratObject, dims = 1:10)
seuratObject <- FindClusters(seuratObject, resolution = 0.5)
seuratObject <- RunUMAP(seuratObject, dims = 1:10)
DimPlot(seuratObject, reduction = "umap")
markers <- FindAllMarkers(seuratObject, only.pos = TRUE, min.pct = 0.25
, logfc.threshold = 0.25)
View(counts)
# Example calculation, adjust based on your mitochondrial gene names
mito.genes <- grep("^MT-", rownames(seuratObject), value = TRUE)
head(seuratObject)
view(seuratObject)
view(seuratObject)
View(seuratObject)
View(seuratObject)
# Calculate the percent of reads coming from mitochondrial genes
mito.genes <- grep("^MT-", rownames(seuratObject), value = TRUE)
percent.mito <- Matrix::colSums(seuratObject[mito.genes, ]) / Matrix::colSums(seuratObject)
library(Seurat)
# Read the feature counts into R, skip the first line and use the second line as header
counts <- read.table("/media/asus/275dd380-2319-4638-bcdd-5f65b2b1d4b5/CHRF_Project_Data/Single_Cell/Single_Cell_NP_NextSeq_Batch_24_R/SC_NP_H_7061/4_Quant/SC_NP_H_7061_featurecounts.txt",
header = TRUE, row.names = 1, skip = 1)
# Since the read counts are likely starting from the 7th column based on the structure of your file
counts <- counts[, 7]
# Read the feature counts into R, skip the first line and use the second line as header
counts <- read.table("/media/asus/275dd380-2319-4638-bcdd-5f65b2b1d4b5/CHRF_Project_Data/Single_Cell/Single_Cell_NP_NextSeq_Batch_24_R/SC_NP_H_7061/4_Quant/SC_NP_H_7061_featurecounts.txt",
header = TRUE, row.names = 1, skip = 1)
# Inspect the structure of the counts data frame
str(counts)
# Look at the first few rows of the counts data frame
head(counts)
# Select the correct column that contains the counts
counts <- counts[, 6]
# Create a Seurat object using the counts
seuratObject <- CreateSeuratObject(counts = counts)
View(seuratObject)
# After reading in your data and creating the Seurat object
seuratObject <- CreateSeuratObject(counts = counts)
# After reading in your data and creating the Seurat object
seuratObject <- CreateSeuratObject(counts = counts)
View(seuratObject)
View(seuratObject)
# Normalize the data
seuratObject <- NormalizeData(seuratObject, normalization.method = "LogNormalize", scale.factor = 10000)
# Find variable features using an alternative method if VST fails
seuratObject <- FindVariableFeatures(seuratObject, selection.method = "mean.var.plot", nfeatures = 2000)
# After reading in your data and creating the Seurat object
seuratObject <- CreateSeuratObject(counts = counts)
# Find variable features using an alternative method if VST fails
seuratObject <- FindVariableFeatures(seuratObject, selection.method = "mean.var.plot", nfeatures = 2000)
# After reading in your data and creating the Seurat object
seuratObject <- CreateSeuratObject(counts = counts)
# Normalize the data
seuratObject <- subset(seuratObject, subset = nFeature_RNA > 200 & nFeature_RNA < 2500)
View(markers)
View(seuratObject)
seuratObject <- CreateSeuratObject(counts = counts)
View(seuratObject)
# Calculate the percent of reads coming from mitochondrial genes
mito.genes <- grep("^MT-", rownames(seuratObject), value = TRUE)
percent.mito <- Matrix::colSums(seuratObject[mito.genes, ]) / Matrix::colSums(seuratObject)
library(Seurat)
counts <- read.table("/media/asus/275dd380-2319-4638-bcdd-5f65b2b1d4b5/CHRF_Project_Data/Single_Cell/Single_Cell_NP_NextSeq_Batch_24_R/SC_NP_H_7061/4_Quant/SC_NP_H_7061_featurecounts.txt", header = TRUE, row.names = 1)
seuratObject <- CreateSeuratObject(counts = counts)
View(seuratObject)
View(counts)
load("/home/asus/Downloads/Honeycomb_test_data/2weekstorage-filteredobject.Rdata")
